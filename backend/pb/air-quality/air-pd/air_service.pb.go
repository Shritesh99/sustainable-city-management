// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: airquality_service/air_service.proto

package air_pd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NilRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NilRequest) Reset() {
	*x = NilRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NilRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilRequest) ProtoMessage() {}

func (x *NilRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilRequest.ProtoReflect.Descriptor instead.
func (*NilRequest) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{0}
}

type AirIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId string `protobuf:"bytes,1,opt,name=stationId,proto3" json:"stationId,omitempty"`
}

func (x *AirIdRequest) Reset() {
	*x = AirIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirIdRequest) ProtoMessage() {}

func (x *AirIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirIdRequest.ProtoReflect.Descriptor instead.
func (*AirIdRequest) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{1}
}

func (x *AirIdRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

type GetPredictedAirStationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredictedAirStations []*InsideGetPredictedAirStationsResponse `protobuf:"bytes,1,rep,name=predictedAirStations,proto3" json:"predictedAirStations,omitempty"`
}

func (x *GetPredictedAirStationsResponse) Reset() {
	*x = GetPredictedAirStationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPredictedAirStationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredictedAirStationsResponse) ProtoMessage() {}

func (x *GetPredictedAirStationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredictedAirStationsResponse.ProtoReflect.Descriptor instead.
func (*GetPredictedAirStationsResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetPredictedAirStationsResponse) GetPredictedAirStations() []*InsideGetPredictedAirStationsResponse {
	if x != nil {
		return x.PredictedAirStations
	}
	return nil
}

type InsideGetPredictedAirStationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationID string  `protobuf:"bytes,1,opt,name=stationID,proto3" json:"stationID,omitempty"`
	Latitude  float32 `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Aqi       int64   `protobuf:"varint,4,opt,name=aqi,proto3" json:"aqi,omitempty"`
}

func (x *InsideGetPredictedAirStationsResponse) Reset() {
	*x = InsideGetPredictedAirStationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideGetPredictedAirStationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideGetPredictedAirStationsResponse) ProtoMessage() {}

func (x *InsideGetPredictedAirStationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideGetPredictedAirStationsResponse.ProtoReflect.Descriptor instead.
func (*InsideGetPredictedAirStationsResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{3}
}

func (x *InsideGetPredictedAirStationsResponse) GetStationID() string {
	if x != nil {
		return x.StationID
	}
	return ""
}

func (x *InsideGetPredictedAirStationsResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *InsideGetPredictedAirStationsResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *InsideGetPredictedAirStationsResponse) GetAqi() int64 {
	if x != nil {
		return x.Aqi
	}
	return 0
}

type GetPredictedDetailedAirDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId   string  `protobuf:"bytes,1,opt,name=stationId,proto3" json:"stationId,omitempty"`
	StationName string  `protobuf:"bytes,2,opt,name=stationName,proto3" json:"stationName,omitempty"`
	Latitude    float32 `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Aqi         int64   `protobuf:"varint,5,opt,name=aqi,proto3" json:"aqi,omitempty"`
	Pm10        int64   `protobuf:"varint,6,opt,name=pm10,proto3" json:"pm10,omitempty"`
	Pm25        int64   `protobuf:"varint,7,opt,name=pm25,proto3" json:"pm25,omitempty"`
	Ozone       int64   `protobuf:"varint,8,opt,name=ozone,proto3" json:"ozone,omitempty"`
	No2         int64   `protobuf:"varint,9,opt,name=no2,proto3" json:"no2,omitempty"`
	So2         int64   `protobuf:"varint,10,opt,name=so2,proto3" json:"so2,omitempty"`
	Co          int64   `protobuf:"varint,11,opt,name=co,proto3" json:"co,omitempty"`
}

func (x *GetPredictedDetailedAirDataResponse) Reset() {
	*x = GetPredictedDetailedAirDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPredictedDetailedAirDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredictedDetailedAirDataResponse) ProtoMessage() {}

func (x *GetPredictedDetailedAirDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredictedDetailedAirDataResponse.ProtoReflect.Descriptor instead.
func (*GetPredictedDetailedAirDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetPredictedDetailedAirDataResponse) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *GetPredictedDetailedAirDataResponse) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *GetPredictedDetailedAirDataResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetAqi() int64 {
	if x != nil {
		return x.Aqi
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetPm10() int64 {
	if x != nil {
		return x.Pm10
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetPm25() int64 {
	if x != nil {
		return x.Pm25
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetOzone() int64 {
	if x != nil {
		return x.Ozone
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetNo2() int64 {
	if x != nil {
		return x.No2
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetSo2() int64 {
	if x != nil {
		return x.So2
	}
	return 0
}

func (x *GetPredictedDetailedAirDataResponse) GetCo() int64 {
	if x != nil {
		return x.Co
	}
	return 0
}

type GetAirStationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StationId   string  `protobuf:"bytes,2,opt,name=stationId,proto3" json:"stationId,omitempty"`
	StationName string  `protobuf:"bytes,3,opt,name=stationName,proto3" json:"stationName,omitempty"`
	Aqi         float32 `protobuf:"fixed32,4,opt,name=aqi,proto3" json:"aqi,omitempty"`
	MeasureTime string  `protobuf:"bytes,5,opt,name=measureTime,proto3" json:"measureTime,omitempty"`
	Epa         string  `protobuf:"bytes,6,opt,name=epa,proto3" json:"epa,omitempty"`
	Pm25        float32 `protobuf:"fixed32,7,opt,name=pm25,proto3" json:"pm25,omitempty"`
	Pm10        float32 `protobuf:"fixed32,8,opt,name=pm10,proto3" json:"pm10,omitempty"`
	Ozone       float32 `protobuf:"fixed32,9,opt,name=ozone,proto3" json:"ozone,omitempty"`
	No2         float32 `protobuf:"fixed32,10,opt,name=no2,proto3" json:"no2,omitempty"`
	So2         float32 `protobuf:"fixed32,11,opt,name=so2,proto3" json:"so2,omitempty"`
	Co          float32 `protobuf:"fixed32,12,opt,name=co,proto3" json:"co,omitempty"`
	InsertTime  int64   `protobuf:"varint,13,opt,name=insertTime,proto3" json:"insertTime,omitempty"`
	UpdateTime  int64   `protobuf:"varint,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Latitude    float32 `protobuf:"fixed32,15,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,16,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *GetAirStationResponse) Reset() {
	*x = GetAirStationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAirStationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAirStationResponse) ProtoMessage() {}

func (x *GetAirStationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAirStationResponse.ProtoReflect.Descriptor instead.
func (*GetAirStationResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAirStationResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAirStationResponse) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *GetAirStationResponse) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *GetAirStationResponse) GetAqi() float32 {
	if x != nil {
		return x.Aqi
	}
	return 0
}

func (x *GetAirStationResponse) GetMeasureTime() string {
	if x != nil {
		return x.MeasureTime
	}
	return ""
}

func (x *GetAirStationResponse) GetEpa() string {
	if x != nil {
		return x.Epa
	}
	return ""
}

func (x *GetAirStationResponse) GetPm25() float32 {
	if x != nil {
		return x.Pm25
	}
	return 0
}

func (x *GetAirStationResponse) GetPm10() float32 {
	if x != nil {
		return x.Pm10
	}
	return 0
}

func (x *GetAirStationResponse) GetOzone() float32 {
	if x != nil {
		return x.Ozone
	}
	return 0
}

func (x *GetAirStationResponse) GetNo2() float32 {
	if x != nil {
		return x.No2
	}
	return 0
}

func (x *GetAirStationResponse) GetSo2() float32 {
	if x != nil {
		return x.So2
	}
	return 0
}

func (x *GetAirStationResponse) GetCo() float32 {
	if x != nil {
		return x.Co
	}
	return 0
}

func (x *GetAirStationResponse) GetInsertTime() int64 {
	if x != nil {
		return x.InsertTime
	}
	return 0
}

func (x *GetAirStationResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *GetAirStationResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetAirStationResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type GetDetailedAirDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirData []*InsideGetDetailedAirDataResponse `protobuf:"bytes,1,rep,name=airData,proto3" json:"airData,omitempty"`
}

func (x *GetDetailedAirDataResponse) Reset() {
	*x = GetDetailedAirDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedAirDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedAirDataResponse) ProtoMessage() {}

func (x *GetDetailedAirDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedAirDataResponse.ProtoReflect.Descriptor instead.
func (*GetDetailedAirDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetDetailedAirDataResponse) GetAirData() []*InsideGetDetailedAirDataResponse {
	if x != nil {
		return x.AirData
	}
	return nil
}

type InsideGetDetailedAirDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationID   string  `protobuf:"bytes,1,opt,name=stationID,proto3" json:"stationID,omitempty"`
	StationName string  `protobuf:"bytes,2,opt,name=stationName,proto3" json:"stationName,omitempty"`
	Latitude    float32 `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Aqi         float32 `protobuf:"fixed32,5,opt,name=aqi,proto3" json:"aqi,omitempty"`
}

func (x *InsideGetDetailedAirDataResponse) Reset() {
	*x = InsideGetDetailedAirDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideGetDetailedAirDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideGetDetailedAirDataResponse) ProtoMessage() {}

func (x *InsideGetDetailedAirDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideGetDetailedAirDataResponse.ProtoReflect.Descriptor instead.
func (*InsideGetDetailedAirDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{7}
}

func (x *InsideGetDetailedAirDataResponse) GetStationID() string {
	if x != nil {
		return x.StationID
	}
	return ""
}

func (x *InsideGetDetailedAirDataResponse) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *InsideGetDetailedAirDataResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *InsideGetDetailedAirDataResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *InsideGetDetailedAirDataResponse) GetAqi() float32 {
	if x != nil {
		return x.Aqi
	}
	return 0
}

type GetNoiseDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoiseData []*InsideGetNoiseDataResponse `protobuf:"bytes,1,rep,name=noiseData,proto3" json:"noiseData,omitempty"`
}

func (x *GetNoiseDataResponse) Reset() {
	*x = GetNoiseDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNoiseDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoiseDataResponse) ProtoMessage() {}

func (x *GetNoiseDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoiseDataResponse.ProtoReflect.Descriptor instead.
func (*GetNoiseDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetNoiseDataResponse) GetNoiseData() []*InsideGetNoiseDataResponse {
	if x != nil {
		return x.NoiseData
	}
	return nil
}

type InsideGetNoiseDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonitorID     int32   `protobuf:"varint,1,opt,name=monitorID,proto3" json:"monitorID,omitempty"`
	Location      string  `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Latitude      float32 `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32 `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	RecordTime    string  `protobuf:"bytes,5,opt,name=recordTime,proto3" json:"recordTime,omitempty"`
	Laeq          float32 `protobuf:"fixed32,6,opt,name=laeq,proto3" json:"laeq,omitempty"`
	CurrentRating int32   `protobuf:"varint,7,opt,name=currentRating,proto3" json:"currentRating,omitempty"`
	DailyAvg      float32 `protobuf:"fixed32,8,opt,name=dailyAvg,proto3" json:"dailyAvg,omitempty"`
	HourlyAvg     float32 `protobuf:"fixed32,9,opt,name=hourlyAvg,proto3" json:"hourlyAvg,omitempty"`
}

func (x *InsideGetNoiseDataResponse) Reset() {
	*x = InsideGetNoiseDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideGetNoiseDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideGetNoiseDataResponse) ProtoMessage() {}

func (x *InsideGetNoiseDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideGetNoiseDataResponse.ProtoReflect.Descriptor instead.
func (*InsideGetNoiseDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{9}
}

func (x *InsideGetNoiseDataResponse) GetMonitorID() int32 {
	if x != nil {
		return x.MonitorID
	}
	return 0
}

func (x *InsideGetNoiseDataResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *InsideGetNoiseDataResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *InsideGetNoiseDataResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *InsideGetNoiseDataResponse) GetRecordTime() string {
	if x != nil {
		return x.RecordTime
	}
	return ""
}

func (x *InsideGetNoiseDataResponse) GetLaeq() float32 {
	if x != nil {
		return x.Laeq
	}
	return 0
}

func (x *InsideGetNoiseDataResponse) GetCurrentRating() int32 {
	if x != nil {
		return x.CurrentRating
	}
	return 0
}

func (x *InsideGetNoiseDataResponse) GetDailyAvg() float32 {
	if x != nil {
		return x.DailyAvg
	}
	return 0
}

func (x *InsideGetNoiseDataResponse) GetHourlyAvg() float32 {
	if x != nil {
		return x.HourlyAvg
	}
	return 0
}

type TimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TimeRequest) Reset() {
	*x = TimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRequest) ProtoMessage() {}

func (x *TimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRequest.ProtoReflect.Descriptor instead.
func (*TimeRequest) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{10}
}

func (x *TimeRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetPedestrianDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PedestrianData []*InsideGetPedestrianDataResponse `protobuf:"bytes,1,rep,name=pedestrianData,proto3" json:"pedestrianData,omitempty"`
}

func (x *GetPedestrianDataResponse) Reset() {
	*x = GetPedestrianDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPedestrianDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPedestrianDataResponse) ProtoMessage() {}

func (x *GetPedestrianDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPedestrianDataResponse.ProtoReflect.Descriptor instead.
func (*GetPedestrianDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetPedestrianDataResponse) GetPedestrianData() []*InsideGetPedestrianDataResponse {
	if x != nil {
		return x.PedestrianData
	}
	return nil
}

type InsideGetPedestrianDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StreetName string  `protobuf:"bytes,2,opt,name=streetName,proto3" json:"streetName,omitempty"`
	Latitude   float32 `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude  float32 `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Time       int64   `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Amount     int32   `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InsideGetPedestrianDataResponse) Reset() {
	*x = InsideGetPedestrianDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideGetPedestrianDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideGetPedestrianDataResponse) ProtoMessage() {}

func (x *InsideGetPedestrianDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideGetPedestrianDataResponse.ProtoReflect.Descriptor instead.
func (*InsideGetPedestrianDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{12}
}

func (x *InsideGetPedestrianDataResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideGetPedestrianDataResponse) GetStreetName() string {
	if x != nil {
		return x.StreetName
	}
	return ""
}

func (x *InsideGetPedestrianDataResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *InsideGetPedestrianDataResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *InsideGetPedestrianDataResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *InsideGetPedestrianDataResponse) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetPredictedAirDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredictedAirData []*InsideGetPredictedAirDataResponse `protobuf:"bytes,1,rep,name=predictedAirData,proto3" json:"predictedAirData,omitempty"`
}

func (x *GetPredictedAirDataResponse) Reset() {
	*x = GetPredictedAirDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPredictedAirDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredictedAirDataResponse) ProtoMessage() {}

func (x *GetPredictedAirDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredictedAirDataResponse.ProtoReflect.Descriptor instead.
func (*GetPredictedAirDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetPredictedAirDataResponse) GetPredictedAirData() []*InsideGetPredictedAirDataResponse {
	if x != nil {
		return x.PredictedAirData
	}
	return nil
}

type InsideGetPredictedAirDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationID    string  `protobuf:"bytes,1,opt,name=stationID,proto3" json:"stationID,omitempty"`
	ForecastTime int64   `protobuf:"varint,2,opt,name=forecastTime,proto3" json:"forecastTime,omitempty"`
	Aqi          float32 `protobuf:"fixed32,3,opt,name=aqi,proto3" json:"aqi,omitempty"`
	Pm25         float32 `protobuf:"fixed32,4,opt,name=pm25,proto3" json:"pm25,omitempty"`
	Pm10         float32 `protobuf:"fixed32,5,opt,name=pm10,proto3" json:"pm10,omitempty"`
	Ozone        float32 `protobuf:"fixed32,6,opt,name=ozone,proto3" json:"ozone,omitempty"`
	No2          float32 `protobuf:"fixed32,7,opt,name=no2,proto3" json:"no2,omitempty"`
	So2          float32 `protobuf:"fixed32,8,opt,name=so2,proto3" json:"so2,omitempty"`
	Co           float32 `protobuf:"fixed32,9,opt,name=co,proto3" json:"co,omitempty"`
	Latitude     float32 `protobuf:"fixed32,10,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float32 `protobuf:"fixed32,11,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *InsideGetPredictedAirDataResponse) Reset() {
	*x = InsideGetPredictedAirDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airquality_service_air_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideGetPredictedAirDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideGetPredictedAirDataResponse) ProtoMessage() {}

func (x *InsideGetPredictedAirDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airquality_service_air_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideGetPredictedAirDataResponse.ProtoReflect.Descriptor instead.
func (*InsideGetPredictedAirDataResponse) Descriptor() ([]byte, []int) {
	return file_airquality_service_air_service_proto_rawDescGZIP(), []int{14}
}

func (x *InsideGetPredictedAirDataResponse) GetStationID() string {
	if x != nil {
		return x.StationID
	}
	return ""
}

func (x *InsideGetPredictedAirDataResponse) GetForecastTime() int64 {
	if x != nil {
		return x.ForecastTime
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetAqi() float32 {
	if x != nil {
		return x.Aqi
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetPm25() float32 {
	if x != nil {
		return x.Pm25
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetPm10() float32 {
	if x != nil {
		return x.Pm10
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetOzone() float32 {
	if x != nil {
		return x.Ozone
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetNo2() float32 {
	if x != nil {
		return x.No2
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetSo2() float32 {
	if x != nil {
		return x.So2
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetCo() float32 {
	if x != nil {
		return x.Co
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *InsideGetPredictedAirDataResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

var File_airquality_service_air_service_proto protoreflect.FileDescriptor

var file_airquality_service_air_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x69, 0x72, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x69, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x4e, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x0c, 0x41, 0x69, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x7d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x91, 0x01, 0x0a, 0x25, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x71, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x71, 0x69, 0x22, 0xa3, 0x02, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x69,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x71, 0x69, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x71, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6d, 0x31,
	0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6d, 0x31, 0x30, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6d, 0x32, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6d, 0x32,
	0x35, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x32, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x6f, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6f, 0x32,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x6f, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x63,
	0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x63, 0x6f, 0x22, 0x99, 0x03, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x71, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x61, 0x71, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x70, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6d, 0x32, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6d, 0x32, 0x35, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6d, 0x31, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70,
	0x6d, 0x31, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x32,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6e, 0x6f, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x6f, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x73, 0x6f, 0x32, 0x12, 0x0e, 0x0a,
	0x02, 0x63, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x63, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x61, 0x69, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x20, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x61, 0x71, 0x69, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x6e,
	0x6f, 0x69, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x6e, 0x6f, 0x69,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa4, 0x02, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x65,
	0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x61, 0x65, 0x71, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x41, 0x76, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x41, 0x76, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x41, 0x76, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x41, 0x76, 0x67, 0x22, 0x21, 0x0a,
	0x0b, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x65, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x65, 0x64, 0x65, 0x73, 0x74, 0x72, 0x69, 0x61,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0e, 0x70, 0x65, 0x64, 0x65, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x64, 0x65, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x70, 0x65, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb7, 0x01, 0x0a, 0x1f, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x47, 0x65, 0x74, 0x50, 0x65, 0x64, 0x65, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x6d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xa3, 0x02, 0x0a, 0x21, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x71, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x61, 0x71, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6d,
	0x32, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6d, 0x32, 0x35, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6d, 0x31, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6d,
	0x31, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x32, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6e, 0x6f, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6f,
	0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x73, 0x6f, 0x32, 0x12, 0x0e, 0x0a, 0x02,
	0x63, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x63, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x32, 0xeb, 0x03, 0x0a, 0x0a, 0x41, 0x69, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x41, 0x69, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x69,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0b, 0x2e, 0x4e, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x34, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0b, 0x2e, 0x4e, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x64, 0x65, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x0c, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x64, 0x65, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0b, 0x2e, 0x4e, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0b, 0x2e,
	0x4e, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x2e,
	0x41, 0x69, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x41, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x61, 0x69, 0x72, 0x2d, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x2f, 0x61, 0x69, 0x72, 0x2d, 0x70, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_airquality_service_air_service_proto_rawDescOnce sync.Once
	file_airquality_service_air_service_proto_rawDescData = file_airquality_service_air_service_proto_rawDesc
)

func file_airquality_service_air_service_proto_rawDescGZIP() []byte {
	file_airquality_service_air_service_proto_rawDescOnce.Do(func() {
		file_airquality_service_air_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_airquality_service_air_service_proto_rawDescData)
	})
	return file_airquality_service_air_service_proto_rawDescData
}

var file_airquality_service_air_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_airquality_service_air_service_proto_goTypes = []interface{}{
	(*NilRequest)(nil),                            // 0: NilRequest
	(*AirIdRequest)(nil),                          // 1: AirIdRequest
	(*GetPredictedAirStationsResponse)(nil),       // 2: GetPredictedAirStationsResponse
	(*InsideGetPredictedAirStationsResponse)(nil), // 3: InsideGetPredictedAirStationsResponse
	(*GetPredictedDetailedAirDataResponse)(nil),   // 4: GetPredictedDetailedAirDataResponse
	(*GetAirStationResponse)(nil),                 // 5: GetAirStationResponse
	(*GetDetailedAirDataResponse)(nil),            // 6: GetDetailedAirDataResponse
	(*InsideGetDetailedAirDataResponse)(nil),      // 7: InsideGetDetailedAirDataResponse
	(*GetNoiseDataResponse)(nil),                  // 8: GetNoiseDataResponse
	(*InsideGetNoiseDataResponse)(nil),            // 9: InsideGetNoiseDataResponse
	(*TimeRequest)(nil),                           // 10: TimeRequest
	(*GetPedestrianDataResponse)(nil),             // 11: GetPedestrianDataResponse
	(*InsideGetPedestrianDataResponse)(nil),       // 12: InsideGetPedestrianDataResponse
	(*GetPredictedAirDataResponse)(nil),           // 13: GetPredictedAirDataResponse
	(*InsideGetPredictedAirDataResponse)(nil),     // 14: InsideGetPredictedAirDataResponse
}
var file_airquality_service_air_service_proto_depIdxs = []int32{
	3,  // 0: GetPredictedAirStationsResponse.predictedAirStations:type_name -> InsideGetPredictedAirStationsResponse
	7,  // 1: GetDetailedAirDataResponse.airData:type_name -> InsideGetDetailedAirDataResponse
	9,  // 2: GetNoiseDataResponse.noiseData:type_name -> InsideGetNoiseDataResponse
	12, // 3: GetPedestrianDataResponse.pedestrianData:type_name -> InsideGetPedestrianDataResponse
	14, // 4: GetPredictedAirDataResponse.predictedAirData:type_name -> InsideGetPredictedAirDataResponse
	1,  // 5: AirService.GetAirStation:input_type -> AirIdRequest
	0,  // 6: AirService.GetDetailedAirData:input_type -> NilRequest
	0,  // 7: AirService.GetNoiseData:input_type -> NilRequest
	10, // 8: AirService.GetPedestrianDataByTime:input_type -> TimeRequest
	0,  // 9: AirService.GetPredictedAirData:input_type -> NilRequest
	0,  // 10: AirService.GetPredictedAirStations:input_type -> NilRequest
	1,  // 11: AirService.GetPredictedDetailedAirData:input_type -> AirIdRequest
	5,  // 12: AirService.GetAirStation:output_type -> GetAirStationResponse
	6,  // 13: AirService.GetDetailedAirData:output_type -> GetDetailedAirDataResponse
	8,  // 14: AirService.GetNoiseData:output_type -> GetNoiseDataResponse
	11, // 15: AirService.GetPedestrianDataByTime:output_type -> GetPedestrianDataResponse
	13, // 16: AirService.GetPredictedAirData:output_type -> GetPredictedAirDataResponse
	2,  // 17: AirService.GetPredictedAirStations:output_type -> GetPredictedAirStationsResponse
	4,  // 18: AirService.GetPredictedDetailedAirData:output_type -> GetPredictedDetailedAirDataResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_airquality_service_air_service_proto_init() }
func file_airquality_service_air_service_proto_init() {
	if File_airquality_service_air_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_airquality_service_air_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NilRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPredictedAirStationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideGetPredictedAirStationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPredictedDetailedAirDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAirStationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailedAirDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideGetDetailedAirDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNoiseDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideGetNoiseDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPedestrianDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideGetPedestrianDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPredictedAirDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airquality_service_air_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideGetPredictedAirDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_airquality_service_air_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_airquality_service_air_service_proto_goTypes,
		DependencyIndexes: file_airquality_service_air_service_proto_depIdxs,
		MessageInfos:      file_airquality_service_air_service_proto_msgTypes,
	}.Build()
	File_airquality_service_air_service_proto = out.File
	file_airquality_service_air_service_proto_rawDesc = nil
	file_airquality_service_air_service_proto_goTypes = nil
	file_airquality_service_air_service_proto_depIdxs = nil
}
