// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: air_data.sql

package db

import (
	"context"
)

const createAirData = `-- name: CreateAirData :one
INSERT INTO aqi_data (stationid, air_data)
VALUES ($1, $2) RETURNING stationid, air_data
`

type CreateAirDataParams struct {
	Stationid string `json:"stationid"`
	AirData   []byte `json:"air_data"`
}

func (q *Queries) CreateAirData(ctx context.Context, arg CreateAirDataParams) (AqiDatum, error) {
	row := q.db.QueryRowContext(ctx, createAirData, arg.Stationid, arg.AirData)
	var i AqiDatum
	err := row.Scan(&i.Stationid, &i.AirData)
	return i, err
}

const deleteAirData = `-- name: DeleteAirData :exec
DELETE
FROM aqi_data
WHERE stationid = $1
`

func (q *Queries) DeleteAirData(ctx context.Context, stationid string) error {
	_, err := q.db.ExecContext(ctx, deleteAirData, stationid)
	return err
}

const getAirData = `-- name: GetAirData :one
SELECT stationid, air_data
FROM aqi_data
WHERE stationid = $1
`

func (q *Queries) GetAirData(ctx context.Context, stationid string) (AqiDatum, error) {
	row := q.db.QueryRowContext(ctx, getAirData, stationid)
	var i AqiDatum
	err := row.Scan(&i.Stationid, &i.AirData)
	return i, err
}
